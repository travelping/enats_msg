name: CI

on:
  push:
  pull_request:
    branches: [ $default-branch ]
  release:
    types:
      - created

jobs:
  test:
    name: CI
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        otp: [27.1, 27.2, 27.3, 28.0]
    container:
      image: erlang:${{ matrix.otp }}-alpine
      options: --privileged
    steps:
    -
      name: Prepare
      run: |
           apk update
           apk --no-cache -u add git zstd make gcc libc-dev
    -
      name: git special configs
      run: |
           git config --global --add safe.directory /__w/enats_msg/enats_msg
    -
      name: Check out repository
      uses: actions/checkout@v4
    -
      name: Build
      run: rebar3 compile
    -
      name: Run tests
      env:
        OTP: ${{ matrix.otp }}
      run: |
           rebar3 xref
           rebar3 dialyzer
           rebar3 eunit
    -
      name: Archive Test Output
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: test-output-${{ matrix.otp }}
        path: |
          _logs/*/TEST*.xml

  publish-test-results:
    name: "Publish Tests Results"
    needs: test
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read
    if: always()
    steps:
      -
        name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      -
        name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/TEST*.xml"

  slack:
    needs: test
    runs-on: ubuntu-24.04
    if: always()
    steps:
    -
      name: Slack notification
      uses: 8398a7/action-slack@v3
      with:
        author_name: "GitHub Actions"
        username: ${{ github.event.repository.name }}
        icon_emoji: ':octocat:'
        fields: repo, message, ref, commit, author, action, eventName, workflow, job, took
        status: ${{ needs.test.result }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
